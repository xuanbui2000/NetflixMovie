@model PaginatedList<Project_PlantShop.Models.Plant>
@using Project_PlantShop.Data
@inject PlantContext _context

<div class="text-center p-3 ">
    <a asp-area="" asp-controller="Home" asp-action="Index">
        <div class="custom-svg mx-auto"></div>
    </a>
</div>

<div class="text-white card-img">
    <img src="https://codex-themes.com/thegem/sites/shop-plants/wp-content/uploads/2022/01/hero.jpg" class="card-img" alt="...">
    <div class="card-img-overlay text-center text-img">
        <h1 class="card-title">AMAZING HOUSEPLANT</h1>
        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        <p class="card-text">Last updated 3 mins ago</p>
    </div>
</div>

<div class="d-flex justify-content-center">
@foreach (var item in _context.Species.ToList())
{  <a asp-action="Specie" asp-route-id="@item.Id">
    @{
        var pathImg = "/Images/design/" + item.Name + ".jpg";
    }
        <div class="card-specie" style="width: 18rem;">
            <div class="card-body">
                <img src="@pathImg" class="img-fluid rounded-start" alt="@item.Name">
                <div class="text">
                    <h5>@item.Name</h5>
                </div>
            </div>
        </div>
    </a>
}
</div>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
            <partial name="Sort"></partial>
        </p>
    </div>
</form>


<div class="row row-cols-1 row-cols-md-5 g-4">
    
    @foreach (var item in Model)
    {
        <a asp-action="Detail" asp-route-id="@item.Id">
        <div class="col">
            <div class="card">
                <img src="@item.ImgTitle" class="card-img-top" alt="Imge">
                <div class="card-body">
                    <p class="font-weight-bold">@item.Name</p>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Price) $</p>
                </div>
            </div>
        </div>
        </a>
    }
</div>

<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var item in ViewBag.Staff as ICollection<Project_PlantShop.Models.Staff>)
    {
        <div class="col">
            <div class="card">
                <div class="imgStaff">
                <img src="@item.imageTitle" class="card-img-top" alt="...">
                </div>
                <div class="card-body">
                    <h5 class="card-title">@item.FullName</h5>
                    <h5 class="card-title">@item.Role</h5>
                    <h5 class="card-title">Phone number: @item.Phone</h5>
                    <p class="card-text">@item.decription</p>
                </div>
            </div>
        </div>

    }
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

}
<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex -1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled"> Previous</a>
<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex +1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled"> Next</a>


