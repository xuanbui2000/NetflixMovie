@model PaginatedList<Project_PlantShop.Models.Plant>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
   
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="Index">Back to Full List</a>
                 <partial name="Sort" ></partial>
            </p>
        </div>
    </form>

    <div class="row row-cols-1 row-cols-md-5 g-4">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card">
                    <img src="@item.ImgTitle" class="card-img-top" alt="Imge">
                    <div class="card-body">
                        <p class="font-weight-bold">@item.Name</p>
                        <ul class="navbar-nav flex-grow-1">
                            @await Html.PartialAsync("Component", new ViewDataDictionary(ViewData) { {"PlantID", @item.Id}})
                        </ul>
                        <p class="card-text">$: @Html.DisplayFor(modelItem => item.Price)</p>
                    </div>
                </div>
            </div>
          
        }
    </div>


    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    }
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex -1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled"> Previous</a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex +1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled"> Next</a>


